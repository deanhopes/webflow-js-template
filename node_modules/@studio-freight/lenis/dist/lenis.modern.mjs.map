{"version":3,"file":"lenis.modern.mjs","sources":["../src/maths.js","../src/animate.js","../src/debounce.js","../src/dimensions.js","../src/nanoevents.js","../src/virtual-scroll.js","../src/index.js"],"sourcesContent":["// Clamp a value between a minimum and maximum value\r\nexport function clamp(min, input, max) {\r\n  return Math.max(min, Math.min(input, max))\r\n}\r\n\r\n// Truncate a floating-point number to a specified number of decimal places\r\nexport function truncate(value, decimals = 0) {\r\n  return parseFloat(value.toFixed(decimals))\r\n}\r\n\r\n// Linearly interpolate between two values using an amount (0 <= t <= 1)\r\nexport function lerp(x, y, t) {\r\n  return (1 - t) * x + t * y\r\n}\r\n\r\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\r\nexport function damp(x, y, lambda, dt) {\r\n  return lerp(x, y, 1 - Math.exp(-lambda * dt))\r\n}\r\n\r\n// Calculate the modulo of the dividend and divisor while keeping the result within the same sign as the divisor\r\n// https://anguscroll.com/just/just-modulo\r\nexport function modulo(n, d) {\r\n  return ((n % d) + d) % d\r\n}\r\n","import { clamp, damp } from './maths'\r\n\r\n// Animate class to handle value animations with lerping or easing\r\nexport class Animate {\r\n  // Advance the animation by the given delta time\r\n  advance(deltaTime) {\r\n    if (!this.isRunning) return\r\n\r\n    let completed = false\r\n\r\n    if (this.lerp) {\r\n      this.value = damp(this.value, this.to, this.lerp * 60, deltaTime)\r\n      if (Math.round(this.value) === this.to) {\r\n        this.value = this.to\r\n        completed = true\r\n      }\r\n    } else {\r\n      this.currentTime += deltaTime\r\n      const linearProgress = clamp(0, this.currentTime / this.duration, 1)\r\n\r\n      completed = linearProgress >= 1\r\n      const easedProgress = completed ? 1 : this.easing(linearProgress)\r\n      this.value = this.from + (this.to - this.from) * easedProgress\r\n    }\r\n\r\n    // Call the onUpdate callback with the current value and completed status\r\n    this.onUpdate?.(this.value, { completed })\r\n\r\n    if (completed) {\r\n      this.stop()\r\n    }\r\n  }\r\n\r\n  // Stop the animation\r\n  stop() {\r\n    this.isRunning = false\r\n  }\r\n\r\n  // Set up the animation from a starting value to an ending value\r\n  // with optional parameters for lerping, duration, easing, and onUpdate callback\r\n  fromTo(from, to, { lerp = 0.1, duration = 1, easing = (t) => t, onUpdate }) {\r\n    this.from = this.value = from\r\n    this.to = to\r\n    this.lerp = lerp\r\n    this.duration = duration\r\n    this.easing = easing\r\n    this.currentTime = 0\r\n    this.isRunning = true\r\n\r\n    this.onUpdate = onUpdate\r\n  }\r\n}\r\n","export function debounce(callback, delay) {\r\n  let timer\r\n  return function () {\r\n    let args = arguments\r\n    let context = this\r\n    clearTimeout(timer)\r\n    timer = setTimeout(function () {\r\n      callback.apply(context, args)\r\n    }, delay)\r\n  }\r\n}\r\n","import { debounce } from './debounce'\r\n\r\nexport class Dimensions {\r\n  constructor(wrapper, content) {\r\n    this.wrapper = wrapper\r\n    this.content = content\r\n\r\n    if (this.wrapper === window) {\r\n      window.addEventListener('resize', this.onWindowResize, false)\r\n      this.onWindowResize()\r\n    } else {\r\n      this.wrapperResizeObserver = new ResizeObserver(\r\n        debounce(this.onWrapperResize, 100)\r\n      )\r\n      this.wrapperResizeObserver.observe(this.wrapper)\r\n      this.onWrapperResize()\r\n    }\r\n\r\n    this.contentResizeObserver = new ResizeObserver(\r\n      debounce(this.onContentResize, 100)\r\n    )\r\n    this.contentResizeObserver.observe(this.content)\r\n    this.onContentResize()\r\n  }\r\n\r\n  onWindowResize = () => {\r\n    this.width = window.innerWidth\r\n    this.height = window.innerHeight\r\n  }\r\n\r\n  destroy() {\r\n    window.removeEventListener('resize', this.onWindowResize, false)\r\n\r\n    this.wrapperResizeObserver?.disconnect()\r\n    this.contentResizeObserver?.disconnect()\r\n  }\r\n\r\n  onWrapperResize = () => {\r\n    this.width = this.wrapper.clientWidth\r\n    this.height = this.wrapper.clientHeight\r\n  }\r\n\r\n  onContentResize = () => {\r\n    const element =\r\n      this.wrapper === window ? document.documentElement : this.wrapper\r\n    this.scrollHeight = element.scrollHeight\r\n    this.scrollWidth = element.scrollWidth\r\n  }\r\n\r\n  get limit() {\r\n    return {\r\n      x: this.scrollWidth - this.width,\r\n      y: this.scrollHeight - this.height,\r\n    }\r\n  }\r\n}\r\n","export let createNanoEvents = () => ({\r\n  events: {},\r\n\r\n  // Emit an event with the provided arguments\r\n  emit(event, ...args) {\r\n    let callbacks = this.events[event] || []\r\n    for (let i = 0, length = callbacks.length; i < length; i++) {\r\n      callbacks[i](...args)\r\n    }\r\n  },\r\n\r\n  // Register a callback for the specified event\r\n  on(event, cb) {\r\n    // Add the callback to the event's callback list, or create a new list with the callback\r\n    this.events[event]?.push(cb) || (this.events[event] = [cb])\r\n\r\n    // Return an unsubscribe function\r\n    return () => {\r\n      this.events[event] = this.events[event]?.filter((i) => cb !== i)\r\n    }\r\n  },\r\n})\r\n","import { clamp } from './maths'\r\nimport { createNanoEvents } from './nanoevents'\r\n\r\nexport class VirtualScroll {\r\n  constructor(\r\n    element,\r\n    { wheelMultiplier = 1, touchMultiplier = 2, normalizeWheel = false }\r\n  ) {\r\n    this.element = element\r\n    this.wheelMultiplier = wheelMultiplier\r\n    this.touchMultiplier = touchMultiplier\r\n    this.normalizeWheel = normalizeWheel\r\n\r\n    this.touchStart = {\r\n      x: null,\r\n      y: null,\r\n    }\r\n\r\n    this.emitter = createNanoEvents()\r\n\r\n    this.element.addEventListener('wheel', this.onWheel, { passive: false })\r\n    this.element.addEventListener('touchstart', this.onTouchStart, {\r\n      passive: false,\r\n    })\r\n    this.element.addEventListener('touchmove', this.onTouchMove, {\r\n      passive: false,\r\n    })\r\n    this.element.addEventListener('touchend', this.onTouchEnd, {\r\n      passive: false,\r\n    })\r\n  }\r\n\r\n  // Add an event listener for the given event and callback\r\n  on(event, callback) {\r\n    return this.emitter.on(event, callback)\r\n  }\r\n\r\n  // Remove all event listeners and clean up\r\n  destroy() {\r\n    this.emitter.events = {}\r\n\r\n    this.element.removeEventListener('wheel', this.onWheel, {\r\n      passive: false,\r\n    })\r\n    this.element.removeEventListener('touchstart', this.onTouchStart, {\r\n      passive: false,\r\n    })\r\n    this.element.removeEventListener('touchmove', this.onTouchMove, {\r\n      passive: false,\r\n    })\r\n    this.element.removeEventListener('touchend', this.onTouchEnd, {\r\n      passive: false,\r\n    })\r\n  }\r\n\r\n  // Event handler for 'touchstart' event\r\n  onTouchStart = (event) => {\r\n    const { clientX, clientY } = event.targetTouches\r\n      ? event.targetTouches[0]\r\n      : event\r\n\r\n    this.touchStart.x = clientX\r\n    this.touchStart.y = clientY\r\n\r\n    this.lastDelta = {\r\n      x: 0,\r\n      y: 0,\r\n    }\r\n  }\r\n\r\n  // Event handler for 'touchmove' event\r\n  onTouchMove = (event) => {\r\n    const { clientX, clientY } = event.targetTouches\r\n      ? event.targetTouches[0]\r\n      : event\r\n\r\n    const deltaX = -(clientX - this.touchStart.x) * this.touchMultiplier\r\n    const deltaY = -(clientY - this.touchStart.y) * this.touchMultiplier\r\n\r\n    this.touchStart.x = clientX\r\n    this.touchStart.y = clientY\r\n\r\n    this.lastDelta = {\r\n      x: deltaX,\r\n      y: deltaY,\r\n    }\r\n\r\n    this.emitter.emit('scroll', {\r\n      type: 'touch',\r\n      deltaX,\r\n      deltaY,\r\n      event,\r\n    })\r\n  }\r\n\r\n  onTouchEnd = (event) => {\r\n    this.emitter.emit('scroll', {\r\n      type: 'touch',\r\n      inertia: true,\r\n      deltaX: this.lastDelta.x,\r\n      deltaY: this.lastDelta.y,\r\n      event,\r\n    })\r\n  }\r\n\r\n  // Event handler for 'wheel' event\r\n  onWheel = (event) => {\r\n    let { deltaX, deltaY } = event\r\n\r\n    if (this.normalizeWheel) {\r\n      deltaX = clamp(-100, deltaX, 100)\r\n      deltaY = clamp(-100, deltaY, 100)\r\n    }\r\n\r\n    deltaX *= this.wheelMultiplier\r\n    deltaY *= this.wheelMultiplier\r\n\r\n    this.emitter.emit('scroll', { type: 'wheel', deltaX, deltaY, event })\r\n  }\r\n}\r\n","import { version } from '../package.json'\r\nimport { Animate } from './animate'\r\nimport { Dimensions } from './dimensions'\r\nimport { clamp, modulo } from './maths'\r\nimport { createNanoEvents } from './nanoevents'\r\nimport { VirtualScroll } from './virtual-scroll'\r\n\r\n// Technical explaination\r\n// - listen to 'wheel' events\r\n// - prevent 'wheel' event to prevent scroll\r\n// - normalize wheel delta\r\n// - add delta to targetScroll\r\n// - animate scroll to targetScroll (smooth context)\r\n// - if animation is not running, listen to 'scroll' events (native context)\r\n\r\nexport default class Lenis {\r\n  // isScrolling = true when scroll is animating\r\n  // isStopped = true if user should not be able to scroll - enable/disable programatically\r\n  // isSmooth = true if scroll should be animated\r\n  // isLocked = same as isStopped but enabled/disabled when scroll reaches target\r\n\r\n  /**\r\n   * @typedef {(t: number) => number} EasingFunction\r\n   * @typedef {'vertical' | 'horizontal'} Orientation\r\n   * @typedef {'vertical' | 'horizontal' | 'both'} GestureOrientation\r\n   *\r\n   * @typedef LenisOptions\r\n   * @property {Orientation} [direction]\r\n   * @property {GestureOrientation} [gestureDirection]\r\n   * @property {number} [mouseMultiplier]\r\n   * @property {boolean} [smooth]\r\n   *\r\n   * @property {Window | HTMLElement} [wrapper]\r\n   * @property {HTMLElement} [content]\r\n   * @property {Window | HTMLElement} [wheelEventsTarget]\r\n   * @property {boolean} [smoothWheel]\r\n   * @property {boolean} [smoothTouch]\r\n   * @property {boolean} [syncTouch]\r\n   * @property {number} [syncTouchLerp]\r\n   * @property {number} [touchInertiaMultiplier]\r\n   * @property {number} [duration]\r\n   * @property {EasingFunction} [easing]\r\n   * @property {number} [lerp]\r\n   * @property {boolean} [infinite]\r\n   * @property {Orientation} [orientation]\r\n   * @property {GestureOrientation} [gestureOrientation]\r\n   * @property {number} [touchMultiplier]\r\n   * @property {number} [wheelMultiplier]\r\n   * @property {boolean} [normalizeWheel]\r\n   *\r\n   * @param {LenisOptions}\r\n   */\r\n  constructor({\r\n    //--legacy options--//\r\n    direction,\r\n    gestureDirection,\r\n    mouseMultiplier,\r\n    smooth,\r\n    //--legacy options--//\r\n    wrapper = window,\r\n    content = document.documentElement,\r\n    wheelEventsTarget = wrapper,\r\n    smoothWheel = smooth ?? true,\r\n    smoothTouch = false,\r\n    syncTouch = false,\r\n    syncTouchLerp = 0.1,\r\n    touchInertiaMultiplier = 35,\r\n    duration, // in seconds\r\n    easing = (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t)),\r\n    lerp = duration ? null : 0.1,\r\n    infinite = false,\r\n    orientation = direction ?? 'vertical', // vertical, horizontal\r\n    gestureOrientation = gestureDirection ?? 'vertical', // vertical, horizontal, both\r\n    touchMultiplier = 1,\r\n    wheelMultiplier = mouseMultiplier ?? 1,\r\n    normalizeWheel = false,\r\n  } = {}) {\r\n    // warn about legacy options\r\n    if (direction) {\r\n      console.warn(\r\n        'Lenis: `direction` option is deprecated, use `orientation` instead'\r\n      )\r\n    }\r\n    if (gestureDirection) {\r\n      console.warn(\r\n        'Lenis: `gestureDirection` option is deprecated, use `gestureOrientation` instead'\r\n      )\r\n    }\r\n    if (mouseMultiplier) {\r\n      console.warn(\r\n        'Lenis: `mouseMultiplier` option is deprecated, use `wheelMultiplier` instead'\r\n      )\r\n    }\r\n    if (smooth) {\r\n      console.warn(\r\n        'Lenis: `smooth` option is deprecated, use `smoothWheel` instead'\r\n      )\r\n    }\r\n\r\n    window.lenisVersion = version\r\n\r\n    // if wrapper is html or body, fallback to window\r\n    if (wrapper === document.documentElement || wrapper === document.body) {\r\n      wrapper = window\r\n    }\r\n\r\n    this.options = {\r\n      wrapper,\r\n      content,\r\n      wheelEventsTarget,\r\n      smoothWheel,\r\n      smoothTouch,\r\n      syncTouch,\r\n      syncTouchLerp,\r\n      touchInertiaMultiplier,\r\n      duration,\r\n      easing,\r\n      lerp,\r\n      infinite,\r\n      gestureOrientation,\r\n      orientation,\r\n      touchMultiplier,\r\n      wheelMultiplier,\r\n      normalizeWheel,\r\n    }\r\n\r\n    this.dimensions = new Dimensions(wrapper, content)\r\n    this.rootElement.classList.add('lenis')\r\n\r\n    this.velocity = 0\r\n    this.isStopped = false\r\n    this.isSmooth = smoothWheel || smoothTouch\r\n    this.isScrolling = false\r\n    this.targetScroll = this.animatedScroll = this.actualScroll\r\n    this.animate = new Animate()\r\n    this.emitter = createNanoEvents()\r\n\r\n    this.options.wrapper.addEventListener('scroll', this.onScroll, {\r\n      passive: false,\r\n    })\r\n\r\n    this.virtualScroll = new VirtualScroll(wheelEventsTarget, {\r\n      touchMultiplier,\r\n      wheelMultiplier,\r\n      normalizeWheel,\r\n    })\r\n    this.virtualScroll.on('scroll', this.onVirtualScroll)\r\n  }\r\n\r\n  destroy() {\r\n    this.emitter.events = {}\r\n\r\n    this.options.wrapper.removeEventListener('scroll', this.onScroll, {\r\n      passive: false,\r\n    })\r\n\r\n    this.virtualScroll.destroy()\r\n\r\n    this.rootElement.classList.remove('lenis')\r\n    this.rootElement.classList.remove('lenis-smooth')\r\n    this.rootElement.classList.remove('lenis-scrolling')\r\n    this.rootElement.classList.remove('lenis-stopped')\r\n  }\r\n\r\n  on(event, callback) {\r\n    return this.emitter.on(event, callback)\r\n  }\r\n\r\n  off(event, callback) {\r\n    this.emitter.events[event] = this.emitter.events[event]?.filter(\r\n      (i) => callback !== i\r\n    )\r\n  }\r\n\r\n  setScroll(scroll) {\r\n    // apply scroll value immediately\r\n    if (this.isHorizontal) {\r\n      this.rootElement.scrollLeft = scroll\r\n    } else {\r\n      this.rootElement.scrollTop = scroll\r\n    }\r\n  }\r\n\r\n  onVirtualScroll = ({ type, inertia, deltaX, deltaY, event }) => {\r\n    // keep zoom feature\r\n    if (event.ctrlKey) return\r\n\r\n    const isTouch = type === 'touch'\r\n    const isWheel = type === 'wheel'\r\n\r\n    if (\r\n      (this.options.gestureOrientation === 'vertical' && deltaY === 0) || // trackpad previous/next page gesture\r\n      (this.options.gestureOrientation === 'horizontal' && deltaX === 0) ||\r\n      (isTouch &&\r\n        this.options.gestureOrientation === 'vertical' &&\r\n        this.scroll === 0 &&\r\n        !this.options.infinite &&\r\n        deltaY <= 0) // touch pull to refresh\r\n    )\r\n      return\r\n\r\n    // catch if scrolling on nested scroll elements\r\n    if (\r\n      !!event\r\n        .composedPath()\r\n        .find((node) => node?.hasAttribute?.('data-lenis-prevent'))\r\n    )\r\n      return\r\n\r\n    if (this.isStopped || this.isLocked) {\r\n      event.preventDefault()\r\n      return\r\n    }\r\n\r\n    this.isSmooth =\r\n      ((this.options.smoothTouch || this.options.syncTouch) && isTouch) ||\r\n      (this.options.smoothWheel && isWheel)\r\n\r\n    if (!this.isSmooth) {\r\n      this.isScrolling = false\r\n      this.animate.stop()\r\n      return\r\n    }\r\n\r\n    event.preventDefault()\r\n\r\n    let delta = deltaY\r\n    if (this.options.gestureOrientation === 'both') {\r\n      delta = Math.abs(deltaY) > Math.abs(deltaX) ? deltaY : deltaX\r\n    } else if (this.options.gestureOrientation === 'horizontal') {\r\n      delta = deltaX\r\n    }\r\n\r\n    const syncTouch = isTouch && this.options.syncTouch\r\n    const hasTouchInertia = isTouch && inertia && Math.abs(delta) > 1\r\n    if (hasTouchInertia) {\r\n      delta = this.velocity * this.options.touchInertiaMultiplier\r\n    }\r\n\r\n    this.scrollTo(this.targetScroll + delta, {\r\n      programmatic: false,\r\n      ...(syncTouch && {\r\n        lerp: hasTouchInertia ? this.syncTouchLerp : 0.4, // should be 1 but had to leave 0.4 for iOS.....\r\n      }),\r\n    })\r\n  }\r\n\r\n  emit() {\r\n    this.emitter.emit('scroll', this)\r\n  }\r\n\r\n  onScroll = () => {\r\n    if (!this.isScrolling) {\r\n      const lastScroll = this.animatedScroll\r\n      this.animatedScroll = this.targetScroll = this.actualScroll\r\n      this.velocity = 0\r\n      this.direction = Math.sign(this.animatedScroll - lastScroll)\r\n      this.emit()\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    this.isLocked = false\r\n    this.isScrolling = false\r\n    this.velocity = 0\r\n    this.animate.stop()\r\n  }\r\n\r\n  start() {\r\n    this.isStopped = false\r\n\r\n    this.reset()\r\n  }\r\n\r\n  stop() {\r\n    this.isStopped = true\r\n    this.animate.stop()\r\n\r\n    this.reset()\r\n  }\r\n\r\n  raf(time) {\r\n    const deltaTime = time - (this.time || time)\r\n    this.time = time\r\n\r\n    this.animate.advance(deltaTime * 0.001)\r\n  }\r\n\r\n  scrollTo(\r\n    target,\r\n    {\r\n      offset = 0,\r\n      immediate = false,\r\n      lock = false,\r\n      duration = this.options.duration,\r\n      easing = this.options.easing,\r\n      lerp = !duration && this.options.lerp,\r\n      onComplete = null,\r\n      force = false, // scroll even if stopped\r\n      programmatic = true, // called from outside of the class\r\n    } = {}\r\n  ) {\r\n    if (this.isStopped && !force) return\r\n\r\n    // keywords\r\n    if (['top', 'left', 'start'].includes(target)) {\r\n      target = 0\r\n    } else if (['bottom', 'right', 'end'].includes(target)) {\r\n      target = this.limit\r\n    } else {\r\n      let node\r\n\r\n      if (typeof target === 'string') {\r\n        // CSS selector\r\n        node = document.querySelector(target)\r\n      } else if (target?.nodeType) {\r\n        // Node element\r\n        node = target\r\n      }\r\n\r\n      if (node) {\r\n        if (this.options.wrapper !== window) {\r\n          // nested scroll offset correction\r\n          const wrapperRect = this.options.wrapper.getBoundingClientRect()\r\n          offset -= this.isHorizontal ? wrapperRect.left : wrapperRect.top\r\n        }\r\n\r\n        const rect = node.getBoundingClientRect()\r\n\r\n        target =\r\n          (this.isHorizontal ? rect.left : rect.top) + this.animatedScroll\r\n      }\r\n    }\r\n\r\n    if (typeof target !== 'number') return\r\n\r\n    target += offset\r\n    target = Math.round(target)\r\n\r\n    if (this.options.infinite) {\r\n      if (programmatic) {\r\n        this.targetScroll = this.animatedScroll = this.scroll\r\n      }\r\n    } else {\r\n      target = clamp(0, target, this.limit)\r\n    }\r\n\r\n    if (immediate) {\r\n      this.animatedScroll = this.targetScroll = target\r\n      this.setScroll(this.scroll)\r\n      this.reset()\r\n      this.emit()\r\n      onComplete?.()\r\n      return\r\n    }\r\n\r\n    if (!programmatic) {\r\n      if (target === this.targetScroll) return\r\n\r\n      this.targetScroll = target\r\n    }\r\n\r\n    this.animate.fromTo(this.animatedScroll, target, {\r\n      duration,\r\n      easing,\r\n      lerp,\r\n      onUpdate: (value, { completed }) => {\r\n        // started\r\n        if (lock) this.isLocked = true\r\n        this.isScrolling = true\r\n\r\n        // updated\r\n        this.velocity = value - this.animatedScroll\r\n        this.direction = Math.sign(this.velocity)\r\n\r\n        this.animatedScroll = value\r\n        this.setScroll(this.scroll)\r\n\r\n        if (programmatic) {\r\n          // wheel during programmatic should stop it\r\n          this.targetScroll = value\r\n        }\r\n\r\n        // completed\r\n        if (completed) {\r\n          if (lock) this.isLocked = false\r\n          requestAnimationFrame(() => {\r\n            //avoid double scroll event\r\n            this.isScrolling = false\r\n          })\r\n          this.velocity = 0\r\n          onComplete?.()\r\n        }\r\n\r\n        this.emit()\r\n      },\r\n    })\r\n  }\r\n\r\n  get rootElement() {\r\n    return this.options.wrapper === window\r\n      ? this.options.content\r\n      : this.options.wrapper\r\n  }\r\n\r\n  get limit() {\r\n    return this.isHorizontal ? this.dimensions.limit.x : this.dimensions.limit.y\r\n  }\r\n\r\n  get isHorizontal() {\r\n    return this.options.orientation === 'horizontal'\r\n  }\r\n\r\n  get actualScroll() {\r\n    // value browser takes into account\r\n    return this.isHorizontal\r\n      ? this.rootElement.scrollLeft\r\n      : this.rootElement.scrollTop\r\n  }\r\n\r\n  get scroll() {\r\n    return this.options.infinite\r\n      ? modulo(this.animatedScroll, this.limit)\r\n      : this.animatedScroll\r\n  }\r\n\r\n  get progress() {\r\n    // avoid progress to be NaN\r\n    return this.limit === 0 ? 1 : this.scroll / this.limit\r\n  }\r\n\r\n  get isSmooth() {\r\n    return this.__isSmooth\r\n  }\r\n\r\n  set isSmooth(value) {\r\n    if (this.__isSmooth !== value) {\r\n      this.rootElement.classList.toggle('lenis-smooth', value)\r\n      this.__isSmooth = value\r\n    }\r\n  }\r\n\r\n  get isScrolling() {\r\n    return this.__isScrolling\r\n  }\r\n\r\n  set isScrolling(value) {\r\n    if (this.__isScrolling !== value) {\r\n      this.rootElement.classList.toggle('lenis-scrolling', value)\r\n      this.__isScrolling = value\r\n    }\r\n  }\r\n\r\n  get isStopped() {\r\n    return this.__isStopped\r\n  }\r\n\r\n  set isStopped(value) {\r\n    if (this.__isStopped !== value) {\r\n      this.rootElement.classList.toggle('lenis-stopped', value)\r\n      this.__isStopped = value\r\n    }\r\n  }\r\n}\r\n"],"names":["clamp","min","input","max","Math","Animate","advance","deltaTime","_this$onUpdate","this","isRunning","completed","lerp","value","x","y","to","t","exp","round","currentTime","linearProgress","duration","easedProgress","easing","from","onUpdate","call","stop","fromTo","debounce","callback","delay","timer","args","arguments","context","clearTimeout","setTimeout","apply","Dimensions","constructor","wrapper","content","onWindowResize","width","window","innerWidth","height","innerHeight","onWrapperResize","clientWidth","clientHeight","onContentResize","element","document","documentElement","scrollHeight","scrollWidth","addEventListener","wrapperResizeObserver","ResizeObserver","observe","contentResizeObserver","destroy","_this$wrapperResizeOb","_this$contentResizeOb","removeEventListener","disconnect","limit","createNanoEvents","events","emit","event","callbacks","i","length","on","cb","_this$events$event","push","_this$events$event2","filter","VirtualScroll","wheelMultiplier","touchMultiplier","normalizeWheel","onTouchStart","clientX","clientY","targetTouches","touchStart","lastDelta","onTouchMove","deltaX","deltaY","emitter","type","onTouchEnd","inertia","onWheel","passive","Lenis","direction","gestureDirection","mouseMultiplier","smooth","wheelEventsTarget","smoothWheel","smoothTouch","syncTouch","syncTouchLerp","touchInertiaMultiplier","pow","infinite","orientation","gestureOrientation","onVirtualScroll","ctrlKey","isTouch","isWheel","options","scroll","composedPath","find","node","hasAttribute","isStopped","isLocked","preventDefault","isSmooth","isScrolling","animate","delta","abs","hasTouchInertia","velocity","scrollTo","targetScroll","_extends","programmatic","onScroll","lastScroll","animatedScroll","actualScroll","sign","console","warn","lenisVersion","body","dimensions","rootElement","classList","add","virtualScroll","remove","off","_this$emitter$events$","setScroll","isHorizontal","scrollLeft","scrollTop","reset","start","raf","time","target","offset","immediate","lock","onComplete","force","includes","_target","querySelector","nodeType","wrapperRect","getBoundingClientRect","left","top","rect","requestAnimationFrame","d","progress","__isSmooth","toggle","__isScrolling","__isStopped"],"mappings":"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"}